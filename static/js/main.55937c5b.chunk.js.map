{"version":3,"sources":["Autocomplete.jsx","lists.jsx","index.js"],"names":["Autocomplete","props","onChange","e","suggestions","userInput","currentTarget","value","filteredSuggestions","filter","suggestion","toLowerCase","indexOf","setState","activeSuggestion","showSuggestions","onEnter","target","onClick","state","handleClickEvent","onKeyDown","keyCode","length","randomNumber","Math","floor","random","disc","discinfo","correctDisc","guesses","checkGuess","bind","result","this","dateApproved","split","mold","brand","speed","abs","glide","turn","fade","map","o","i","betterDate","className","val","thisGuess","findIndex","item","push","suggestionsListComponent","class","index","onMouseEnter","type","renderRows","Component","defaultProps","discnames","App","require","container","document","createElement","body","appendChild","render"],"mappings":"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iBACA,MACA,KACA,wBACA,cACA,wBACA,MACA,MACA,cACA,MACA,cACA,uBACA,MACA,aACA,MACA,cACA,YACA,cACA,MACA,MACA,SACA,UACA,aACA,YACA,QACA,WACA,WACA,WACA,aACA,gBACA,gBACA,QACA,QACA,WACA,QACA,UACA,QACA,UACA,QACA,QACA,wBACA,QACA,wBACA,yBACA,uBACA,yBACA,OACA,OACA,UACA,SACA,yBACA,yBACA,OACA,UACA,UACA,WACA,QACA,WACA,cACA,iBACA,SACA,YACA,wBACA,UACA,wBACA,QACA,WACA,WACA,aACA,UACA,OACA,KACA,SACA,KACA,OACA,yBACA,WACA,UACA,UACA,WACA,WACA,SACA,aACA,WACA,SACA,WACA,QACA,UACA,QACA,UACA,QACA,QACA,UACA,UACA,WACA,SACA,QACA,WACA,UACA,UACA,UACA,QACA,WACA,QACA,UACA,SACA,UACA,UACA,MACA,OACA,YACA,SACA,QACA,QACA,UACA,UACA,WACA,sBACA,UACA,QACA,SACA,oBACA,OACA,WACA,SACA,UACA,qBACA,cACA,QACA,WACA,OACA,WACA,SACA,MACA,WACA,OACA,YACA,YACA,SACA,cACA,cACA,WACA,kBACA,YACA,SACA,QACA,SACA,UACA,SACA,QACA,SACA,OACA,QACA,UACA,YACA,OACA,SACA,QACA,QACA,MACA,SACA,UACA,UACA,UACA,OACA,MACA,UACA,MACA,WACA,MACA,QACA,aACA,MACA,QACA,QACA,SACA,QACA,UACA,SACA,aACA,UACA,QACA,SACA,WACA,kBACA,WACA,OACA,UACA,YACA,KACA,WACA,UACA,OACA,OACA,cACA,WACA,SACA,QACA,OACA,SACA,QACA,QACA,QACA,UACA,OACA,SACA,UACA,SACA,WACA,OACA,OACA,OACA,OACA,SACA,OACA,SACA,aACA,aACA,OACA,UACA,SACA,WACA,eACA,SACA,OACA,QACA,OACA,QACA,UACA,WACA,UACA,OACA,WACA,UACA,SACA,UACA,WACA,WACA,OACA,OACA,OACA,OACA,WACA,YACA,OACA,OACA,QACA,OACA,SACA,SACA,OACA,OACA,QACA,WACA,SACA,OACA,QACA,UACA,OACA,UACA,SACA,QACA,YACA,OACA,QACA,YACA,QACA,SACA,WACA,WACA,QACA,QACA,WACA,UACA,UACA,SACA,MACA,OACA,MACA,QACA,OACA,OACA,WACA,YACA,YACA,SACA,UACA,UACA,MACA,QACA,SACA,SACA,QACA,SACA,UACA,WACA,QACA,SACA,aACA,QACA,WACA,QACA,QACA,SACA,OACA,SACA,UACA,WACA,SACA,QACA,SACA,SACA,OACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,mBACA,sBACA,sBACA,KACA,KACA,yBACA,yBACA,KACA,KACA,SACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,OACA,QACA,kBACA,+BACA,+CACA,wBACA,kBACA,qBACA,wBACA,mBACA,mCACA,iBACA,wBACA,gCACA,gDACA,0BACA,SACA,2BACA,2CACA,uBACA,gCACA,QACA,mBACA,kBACA,iBACA,uBACA,uCACA,4BACA,2BACA,qCACA,kCACA,0BACA,0CACA,mBACA,mCACA,uBACA,uCACA,YACA,mBACA,mCACA,mBACA,SACA,SACA,OACA,SACA,UACA,cACA,aACA,WACA,WACA,YACA,gBACA,MACA,OACA,SACA,SACA,WACA,OACA,OACA,SC1aF,SAASC,IACP,OACE,gCACE,yDACA,oFACA,cAAC,EAAD,CAAc5D,YAAa2D,OAPjCE,EAAQ,IAYR,IAAMC,EAAYC,SAASC,cAAc,OACzCD,SAASE,KAAKC,YAAYJ,GAC1BK,iBAAO,cAACP,EAAD,IAASE,K","file":"static/js/main.55937c5b.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport discinfo from \"./discinfo.json\";\r\n\r\nclass Autocomplete extends Component {\r\n  static propTypes = {\r\n    suggestions: PropTypes.instanceOf(Array)\r\n  };\r\n\r\n  static defaultProps = {\r\n    suggestions: []\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var maxNumber = 434;\r\n    var randomNumber = Math.floor(Math.random() * maxNumber + 1);\r\n\r\n    var disc = discinfo[randomNumber];\r\n\r\n    this.state = {\r\n      correctDisc: disc,\r\n      // The active selection's index\r\n      activeSuggestion: 0,\r\n      // The suggestions that match the user's input\r\n      filteredSuggestions: [],\r\n      // Whether or not the suggestion list is shown\r\n      showSuggestions: false,\r\n      // What the user has entered\r\n      userInput: \"\",\r\n      guesses: []\r\n    };\r\n    this.checkGuess = this.checkGuess.bind(this);\r\n  }\r\n\r\n  checkGuess(disc) {\r\n    //check if correct mold\r\n    var result = [\r\n      \"wrong\",\r\n      \"wrong\",\r\n      \"wrong\",\r\n      \"wrong\",\r\n      \"wrong\",\r\n      \"wrong\",\r\n      \"wrong\"\r\n    ];\r\n    var correctDisc = this.state.correctDisc;\r\n    correctDisc.dateApproved = correctDisc.dateApproved.split(\"-\")[0];\r\n    disc.dateApproved = disc.dateApproved.split(\"-\")[0];\r\n\r\n    if (disc.mold === correctDisc.mold) {\r\n      result[0] = \"correct\";\r\n    }\r\n    if (disc.brand === correctDisc.brand) {\r\n      result[1] = \"correct\";\r\n    } else if (\r\n      (correctDisc.brand === \"MVP Disc Sports\" ||\r\n        correctDisc.brand === \"Axiom Discs\") &&\r\n      (disc.brand === \"MVP Disc Sports\" || disc.brand === \"Axiom Discs\")\r\n    ) {\r\n      result[1] = \"close\";\r\n    } else if (\r\n      (correctDisc.brand === \"Latitude 64\" ||\r\n        correctDisc.brand === \"Dynamic Discs\" ||\r\n        correctDisc.brand === \"Westside Golf Discs\") &&\r\n      (disc.brand === \"Latitude 64\" ||\r\n        disc.brand === \"Dynamic Discs\" ||\r\n        disc.brand === \"Westside Golf Discs\")\r\n    ) {\r\n      result[1] = \"close\";\r\n    }\r\n    if (disc.speed === correctDisc.speed) {\r\n      result[2] = \"correct\";\r\n    } else if (Math.abs(disc.speed - correctDisc.speed) <= 3) {\r\n      result[2] = \"close\";\r\n    }\r\n    if (disc.glide === correctDisc.glide) {\r\n      result[3] = \"correct\";\r\n    } else if (Math.abs(disc.glide - correctDisc.glide) <= 2) {\r\n      result[3] = \"close\";\r\n    }\r\n    if (disc.turn === correctDisc.turn) {\r\n      result[4] = \"correct\";\r\n    } else if (Math.abs(disc.turn - correctDisc.turn) <= 2) {\r\n      result[4] = \"close\";\r\n    }\r\n    if (disc.fade === correctDisc.fade) {\r\n      result[5] = \"correct\";\r\n    } else if (Math.abs(disc.fade - correctDisc.fade) <= 2) {\r\n      result[5] = \"close\";\r\n    }\r\n    if (disc.dateApproved === correctDisc.dateApproved) {\r\n      result[6] = \"correct\";\r\n    } else if (Math.abs(disc.dateApproved - correctDisc.dateApproved) <= 5) {\r\n      result[6] = \"close\";\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  renderRows() {\r\n    return this.state.guesses.map((o, i) => {\r\n      var betterDate = discinfo[o].dateApproved.split(\"-\")[0];\r\n      var result = this.checkGuess(discinfo[o]);\r\n\r\n      return (\r\n        <tr key={\"item-\" + i}>\r\n          <td className={result[0]}>{discinfo[o].mold}</td>\r\n          <td className={result[1]}>{discinfo[o].brand}</td>\r\n          <td className={result[2]}>{discinfo[o].speed}</td>\r\n          <td className={result[3]}>{discinfo[o].glide}</td>\r\n          <td className={result[4]}>{discinfo[o].turn}</td>\r\n          <td className={result[5]}>{discinfo[o].fade}</td>\r\n          <td className={result[6]}>{betterDate}</td>\r\n        </tr>\r\n      );\r\n    });\r\n  }\r\n\r\n  handleClickEvent() {\r\n    var guesses = this.state.guesses;\r\n    var val = this.state.filteredSuggestions[this.state.activeSuggestion];\r\n\r\n    var thisGuess = discinfo.findIndex(function (item, i) {\r\n      return item.mold === val;\r\n    });\r\n    guesses.push(thisGuess);\r\n\r\n    this.setState({\r\n      guesses: guesses\r\n    });\r\n  }\r\n\r\n  onChange = (e) => {\r\n    const { suggestions } = this.props;\r\n    const userInput = e.currentTarget.value;\r\n\r\n    // Filter our suggestions that don't contain the user's input\r\n    const filteredSuggestions = suggestions.filter(\r\n      (suggestion) =>\r\n        suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1\r\n    );\r\n\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions,\r\n      showSuggestions: true,\r\n      userInput: e.currentTarget.value\r\n    });\r\n  };\r\n\r\n  onEnter = (e) => {\r\n    this.setState({\r\n      activeSuggestion: e.target.value\r\n    });\r\n  };\r\n\r\n  onClick = (e) => {\r\n    const { activeSuggestion, filteredSuggestions } = this.state;\r\n\r\n    this.setState(\r\n      {\r\n        activeSuggestion: 0,\r\n        filteredSuggestions: [],\r\n        showSuggestions: false,\r\n        userInput: filteredSuggestions[activeSuggestion]\r\n      },\r\n      this.handleClickEvent()\r\n    );\r\n  };\r\n\r\n  onKeyDown = (e) => {\r\n    const { activeSuggestion, filteredSuggestions } = this.state;\r\n\r\n    // User pressed the enter key\r\n    if (e.keyCode === 13) {\r\n      this.setState(\r\n        {\r\n          activeSuggestion: 0,\r\n          showSuggestions: false,\r\n          userInput: filteredSuggestions[activeSuggestion]\r\n        },\r\n        this.handleClickEvent()\r\n      );\r\n    }\r\n    // User pressed the up arrow\r\n    else if (e.keyCode === 38) {\r\n      if (activeSuggestion === 0) {\r\n        return;\r\n      }\r\n\r\n      this.setState({ activeSuggestion: activeSuggestion - 1 });\r\n    }\r\n    // User pressed the down arrow\r\n    else if (e.keyCode === 40) {\r\n      if (activeSuggestion - 1 === filteredSuggestions.length) {\r\n        return;\r\n      }\r\n\r\n      this.setState({ activeSuggestion: activeSuggestion + 1 });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onEnter,\r\n      onChange,\r\n      onClick,\r\n      onKeyDown,\r\n      checkGuess,\r\n      state: {\r\n        activeSuggestion,\r\n        filteredSuggestions,\r\n        showSuggestions,\r\n        userInput\r\n      }\r\n    } = this;\r\n\r\n    let suggestionsListComponent;\r\n\r\n    if (showSuggestions && userInput) {\r\n      if (filteredSuggestions.length) {\r\n        suggestionsListComponent = (\r\n          <ul class=\"suggestions\">\r\n            {filteredSuggestions.map((suggestion, index) => {\r\n              let className;\r\n\r\n              // Flag the active suggestion with a class\r\n              if (index === activeSuggestion) {\r\n                className = \"suggestion-active\";\r\n              }\r\n\r\n              return (\r\n                <li\r\n                  className={className}\r\n                  key={suggestion}\r\n                  value={index}\r\n                  onMouseEnter={onEnter}\r\n                  onClick={onClick}\r\n                >\r\n                  {suggestion}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        );\r\n      } else {\r\n        suggestionsListComponent = (\r\n          <div class=\"no-suggestions\">\r\n            <em>No suggestions, you're on your own!</em>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <input\r\n          type=\"text\"\r\n          onChange={onChange}\r\n          onKeyDown={onKeyDown}\r\n          value={userInput}\r\n        />\r\n        {suggestionsListComponent}\r\n        <div>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Disc Name</th>\r\n                <th>Manufacturer</th>\r\n                <th>Speed</th>\r\n                <th>Glide</th>\r\n                <th>Turn</th>\r\n                <th>Fade</th>\r\n                <th>Approval Date</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{this.renderRows()}</tbody>\r\n          </table>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Autocomplete;\r\n","export const discnames = [\r\n  \"Alias\",\r\n  \"Clash\",\r\n  \"Crave\",\r\n  \"Defy\",\r\n  \"Envy\",\r\n  \"Excite\",\r\n  \"Fireball\",\r\n  \"Insanity\",\r\n  \"Inspire\",\r\n  \"Mayhem\",\r\n  \"Panic\",\r\n  \"Proxy\",\r\n  \"Tantrum\",\r\n  \"Tenacity\",\r\n  \"Theory\",\r\n  \"Thrill\",\r\n  \"Vanish\",\r\n  \"Virus\",\r\n  \"Wrath\",\r\n  \"CD - Craze\",\r\n  \"CD2\",\r\n  \"CD3\",\r\n  \"DD - Hysteria\",\r\n  \"DD2 Frenzy\",\r\n  \"DDx\",\r\n  \"FD - Jackal\",\r\n  \"FD2\",\r\n  \"FD2 (retooled)\",\r\n  \"FD3\",\r\n  \"MD\",\r\n  \"MD1 - Midrange Driver\",\r\n  \"MD2 - Fiend\",\r\n  \"MD3 - Midrange Driver\",\r\n  \"MD4\",\r\n  \"MD5\",\r\n  \"P1 - Maniac\",\r\n  \"P1x\",\r\n  \"P2 - Psycho\",\r\n  \"P3 - Putt & Approach\",\r\n  \"P3x\",\r\n  \"PD - Freak\",\r\n  \"PDx\",\r\n  \"PD2 - Chaos\",\r\n  \"TD - Rush\",\r\n  \"TD2 - Fever\",\r\n  \"TDx\",\r\n  \"APX\",\r\n  \"Archer\",\r\n  \"Avenger\",\r\n  \"Avenger-SS\",\r\n  \"Banger-GT\",\r\n  \"Buzzz\",\r\n  \"Buzzz OS\",\r\n  \"Buzzz-SS\",\r\n  \"Buzzz-GT\",\r\n  \"Challenger\",\r\n  \"Challenger OS\",\r\n  \"Challenger SS\",\r\n  \"Comet\",\r\n  \"Crank\",\r\n  \"Crank SS\",\r\n  \"Crush\",\r\n  \"Cyclone\",\r\n  \"Drone\",\r\n  \"Eclipse\",\r\n  \"Flash\",\r\n  \"Flick\",\r\n  \"Focus (Ace Race 2009)\",\r\n  \"Force\",\r\n  \"Glide (Ace Race 2004)\",\r\n  \"Impact (Ace Race 2007)\",\r\n  \"Heat (Ace Race 2014)\",\r\n  \"Hornet (Ace Race 2010)\",\r\n  \"Kong\",\r\n  \"Luna\",\r\n  \"Machete\",\r\n  \"Magnet\",\r\n  \"Mantis (Ace Race 2013)\",\r\n  \"Meteor (Ace Race 2006)\",\r\n  \"Nuke\",\r\n  \"Nuke OS\",\r\n  \"Nuke SS\",\r\n  \"Predator\",\r\n  \"Pulse\",\r\n  \"Punisher\",\r\n  \"Putt&apos;r\",\r\n  \"Rattler Putter\",\r\n  \"Ringer\",\r\n  \"Ringer GT\",\r\n  \"Roach (Ace Race 2015)\",\r\n  \"Stratus\",\r\n  \"Sting (Ace Race 2017)\",\r\n  \"Surge\",\r\n  \"Surge-SS\",\r\n  \"Thrasher\",\r\n  \"Undertaker\",\r\n  \"Vulture\",\r\n  \"Wasp\",\r\n  \"XL\",\r\n  \"Xpress\",\r\n  \"XS\",\r\n  \"Zone\",\r\n  \"Zombee (Ace Race 2012)\",\r\n  \"Breakout\",\r\n  \"Captain\",\r\n  \"Convict\",\r\n  \"Criminal\",\r\n  \"Defender\",\r\n  \"Deputy\",\r\n  \"EMAC Truth\",\r\n  \"Enforcer\",\r\n  \"Escape\",\r\n  \"Evidence\",\r\n  \"Felon\",\r\n  \"Freedom\",\r\n  \"Gavel\",\r\n  \"Getaway\",\r\n  \"Guard\",\r\n  \"Judge\",\r\n  \"Justice\",\r\n  \"Marshal\",\r\n  \"Maverick\",\r\n  \"Patrol\",\r\n  \"Proof\",\r\n  \"Renegade\",\r\n  \"Sheriff\",\r\n  \"Slammer\",\r\n  \"Suspect\",\r\n  \"Thief\",\r\n  \"Trespass\",\r\n  \"Truth\",\r\n  \"Verdict\",\r\n  \"Warden\",\r\n  \"Warrant\",\r\n  \"Witness\",\r\n  \"Ape\",\r\n  \"Aero\",\r\n  \"Archangel\",\r\n  \"Archon\",\r\n  \"Atlas\",\r\n  \"Aviar\",\r\n  \"AviarX3\",\r\n  \"Aviar 3\",\r\n  \"Aviar XD\",\r\n  \"Aviar XD (retooled)\",\r\n  \"Banshee\",\r\n  \"Beast\",\r\n  \"Birdie\",\r\n  \"Birdie (retooled)\",\r\n  \"Boss\",\r\n  \"Bullfrog\",\r\n  \"Caiman\",\r\n  \"Cheetah\",\r\n  \"Cheetah (retooled)\",\r\n  \"Classic Roc\",\r\n  \"Cobra\",\r\n  \"Colossus\",\r\n  \"Colt\",\r\n  \"Corvette\",\r\n  \"Coyote\",\r\n  \"CRO\",\r\n  \"Daedalus\",\r\n  \"Dart\",\r\n  \"Destroyer\",\r\n  \"Dominator\",\r\n  \"Dragon\",\r\n  \"Eagle (old)\",\r\n  \"Eagle (new)\",\r\n  \"Firebird\",\r\n  \"Firebird L (FL)\",\r\n  \"Firestorm\",\r\n  \"Foxbat\",\r\n  \"Gator\",\r\n  \"Gator3\",\r\n  \"Gazelle\",\r\n  \"Groove\",\r\n  \"Hydra\",\r\n  \"Katana\",\r\n  \"Kite\",\r\n  \"Krait\",\r\n  \"Leopard\",\r\n  \"Leopard 3\",\r\n  \"Mako\",\r\n  \"Mako 3\",\r\n  \"Mamba\",\r\n  \"Manta\",\r\n  \"Max\",\r\n  \"Mirage\",\r\n  \"Monarch\",\r\n  \"Monster\",\r\n  \"Mystere\",\r\n  \"Nova\",\r\n  \"ORC\",\r\n  \"Panther\",\r\n  \"Pig\",\r\n  \"Pole Cat\",\r\n  \"Rat\",\r\n  \"Rhyno\",\r\n  \"Roadrunner\",\r\n  \"Roc\",\r\n  \"Roc 3\",\r\n  \"RocX3\",\r\n  \"Savant\",\r\n  \"Shark\",\r\n  \"Shark 3\",\r\n  \"Shryke\",\r\n  \"Sidewinder\",\r\n  \"Skeeter\",\r\n  \"Sonic\",\r\n  \"Spider\",\r\n  \"Starfire\",\r\n  \"Starfire L (SL)\",\r\n  \"Stingray\",\r\n  \"Stud\",\r\n  \"TeeBird\",\r\n  \"Teebird 3\",\r\n  \"TL\",\r\n  \"TeeDevil\",\r\n  \"Tee-Rex\",\r\n  \"Tern\",\r\n  \"TL 3\",\r\n  \"Thunderbird\",\r\n  \"Valkyrie\",\r\n  \"Viking\",\r\n  \"Viper\",\r\n  \"VRoc\",\r\n  \"Vulcan\",\r\n  \"Wahoo\",\r\n  \"Wedge\",\r\n  \"Whale\",\r\n  \"Whippet\",\r\n  \"Wolf\",\r\n  \"Wombat\",\r\n  \"Wombat3\",\r\n  \"Wraith\",\r\n  \"XCaliber\",\r\n  \"Lion\",\r\n  \"Berg\",\r\n  \"Falk\",\r\n  \"Grym\",\r\n  \"Grym X\",\r\n  \"Kaxe\",\r\n  \"Kaxe Z\",\r\n  \"Rask (old)\",\r\n  \"Rask (new)\",\r\n  \"Reko\",\r\n  \"Stål\",\r\n  \"Anchor\",\r\n  \"Ballista\",\r\n  \"Ballista Pro\",\r\n  \"Beetle\",\r\n  \"Bite\",\r\n  \"Blitz\",\r\n  \"Bolt\",\r\n  \"Bryce\",\r\n  \"Caltrop\",\r\n  \"Claymore\",\r\n  \"Compass\",\r\n  \"Core\",\r\n  \"Culverin\",\r\n  \"Cutlass\",\r\n  \"Dagger\",\r\n  \"Diamond\",\r\n  \"Explorer\",\r\n  \"Falchion\",\r\n  \"Flow\",\r\n  \"Fuji\",\r\n  \"Fury\",\r\n  \"Fuse\",\r\n  \"Gauntlet\",\r\n  \"Gladiator\",\r\n  \"Gobi\",\r\n  \"Halo\",\r\n  \"Havoc\",\r\n  \"Jade\",\r\n  \"Knight\",\r\n  \"Macana\",\r\n  \"Mace\",\r\n  \"Maul\",\r\n  \"Mercy\",\r\n  \"Missilen\",\r\n  \"Musket\",\r\n  \"Pain\",\r\n  \"Pearl\",\r\n  \"Pioneer\",\r\n  \"Pure\",\r\n  \"Raketen\",\r\n  \"Recoil\",\r\n  \"River\",\r\n  \"River Pro\",\r\n  \"Ruby\",\r\n  \"Saint\",\r\n  \"Saint Pro\",\r\n  \"Sarek\",\r\n  \"Scythe\",\r\n  \"Sinus AP\",\r\n  \"Sinus SP\",\r\n  \"Spark\",\r\n  \"Spike\",\r\n  \"Stiletto\",\r\n  \"Striker\",\r\n  \"Villain\",\r\n  \"Vision\",\r\n  \"XXX\",\r\n  \"Zion\",\r\n  \"Amp\",\r\n  \"Anode\",\r\n  \"Atom\",\r\n  \"Axis\",\r\n  \"Catalyst\",\r\n  \"Deflector\",\r\n  \"Dimension\",\r\n  \"Energy\",\r\n  \"Impulse\",\r\n  \"Inertia\",\r\n  \"Ion\",\r\n  \"Limit\",\r\n  \"Matrix\",\r\n  \"Motion\",\r\n  \"Nitro\",\r\n  \"Octane\",\r\n  \"Orbital\",\r\n  \"Particle\",\r\n  \"Phase\",\r\n  \"Photon\",\r\n  \"Relativity\",\r\n  \"Relay\",\r\n  \"Resistor\",\r\n  \"Servo\",\r\n  \"Shock\",\r\n  \"Signal\",\r\n  \"Spin\",\r\n  \"Switch\",\r\n  \"Tangent\",\r\n  \"Teleport\",\r\n  \"Tensor\",\r\n  \"Tesla\",\r\n  \"Vector\",\r\n  \"Vertex\",\r\n  \"Volt\",\r\n  \"Wave\",\r\n  \"A1\",\r\n  \"A2\",\r\n  \"A3\",\r\n  \"A4\",\r\n  \"D1\",\r\n  \"D2\",\r\n  \"D3\",\r\n  \"D4\",\r\n  \"D5\",\r\n  \"D6\",\r\n  \"F1\",\r\n  \"F2\",\r\n  \"F3\",\r\n  \"F5\",\r\n  \"F7\",\r\n  \"H1 (retooled H1)\",\r\n  \"H2 V2 (retooled H2)\",\r\n  \"H3 V2 (retooled H3)\",\r\n  \"H4\",\r\n  \"H5\",\r\n  \"M2 (originally the M3)\",\r\n  \"M3 (originally the M2)\",\r\n  \"M4\",\r\n  \"M5\",\r\n  \"New M1\",\r\n  \"PA1\",\r\n  \"PA2\",\r\n  \"PA3\",\r\n  \"PA4\",\r\n  \"X2\",\r\n  \"X3\",\r\n  \"X4\",\r\n  \"X5\",\r\n  \"Ahti\",\r\n  \"Anvil\",\r\n  \"Bard (Laulaja1)\",\r\n  \"Boatman (Tuonelan Lautturi1)\",\r\n  \"Boatman VIP Air (VIP Air Tuonelan Lautturi1)\",\r\n  \"Catapult (Katapultt1)\",\r\n  \"Crown (Kruunu1)\",\r\n  \"Destiny (Kohtalo1)\",\r\n  \"Fortress (Linnoitus1)\",\r\n  \"Giant (Vipunen1)\",\r\n  \"Giant VIP Air (VIP Air Vipunen1)\",\r\n  \"Harp (Kannel1)\",\r\n  \"Hatchet (Sotakipves1)\",\r\n  \"King (Pohjolan Isäntä1)\",\r\n  \"King VIP Air (VIP Air Pohjolan Isäntä1)\",\r\n  \"Longbowman (Jousimies1)\",\r\n  \"Maiden\",\r\n  \"Northman (Pohjan Poika1)\",\r\n  \"Northman VIP Air (VIP Air Pohjan Poika1)\",\r\n  \"Pine (Hornan Honka1)\",\r\n  \"Queen (Pohjolan Emäntä)\",\r\n  \"Sampo\",\r\n  \"Seer (Ennustaja)\",\r\n  \"Shield (Kilpi1)\",\r\n  \"Sling (Linko1)\",\r\n  \"Stag (Hiiden Hirvi1)\",\r\n  \"Stag VIP Air (VIP Air Hiiden Hirvi1)\",\r\n  \"Sorcerer (Tietäjä1)\",\r\n  \"Swan (Tuonelan Joutsen1)\",\r\n  \"Swan (retooled, Tuonelan Joutsen1)\",\r\n  \"Swan Reborn (Tuonelan Joutsen1)\",\r\n  \"Sword (Kalevan Miekka1)\",\r\n  \"Sword VIP Air (VIP Air Kalevan Miekka1)\",\r\n  \"Tursas (Tursas1)\",\r\n  \"Tursas VIP Air (VIP Air Tursas1)\",\r\n  \"Underworld (Manala1)\",\r\n  \"Underworld VIP Air (VIP Air Manala1)\",\r\n  \"War Horse\",\r\n  \"Warship (Pursi1)\",\r\n  \"Warship VIP Air (VIP Air Pursi1)\",\r\n  \"World (Maailma1)\",\r\n  \"D1 Max\",\r\n  \"D2 Max\",\r\n  \"Pyro\",\r\n  \"Raider\",\r\n  \"Entropy\",\r\n  \"Sea Serpent\",\r\n  \"Fox Spirit\",\r\n  \"Instinct\",\r\n  \"Sun Crow\",\r\n  \"Spring Ox\",\r\n  \"Guardian Lion\",\r\n  \"DD3\",\r\n  \"MX-3\",\r\n  \"Method\",\r\n  \"Enigma\",\r\n  \"Delirium\",\r\n  \"Link\",\r\n  \"Anax\",\r\n  \"Malta\"\r\n];\r\n","import React from \"react\";\nimport { render } from \"react-dom\";\n\nimport Autocomplete from \"./Autocomplete\";\nimport { discnames } from \"./lists\";\n\nrequire(\"./styles.css\");\n\nfunction App() {\n  return (\n    <div>\n      <h1>Disc Golf Guessing Game</h1>\n      <h2>Try and Find the Correct Disc in 6 guesses or less</h2>\n      <Autocomplete suggestions={discnames} />\n    </div>\n  );\n}\n\nconst container = document.createElement(\"div\");\ndocument.body.appendChild(container);\nrender(<App />, container);\n"],"sourceRoot":""}